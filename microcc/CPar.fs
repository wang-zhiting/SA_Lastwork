// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

//定义三元组
let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c


# 28 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | RANGE
  | IN
  | DOT
  | SWITCH
  | CASE
  | DEFAULT
  | DO
  | COLON
  | QUEST
  | FOR
  | ADDEQ
  | MINUSEQ
  | ADDSELF
  | MINUSSELF
  | STRING
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | CSTCHAR of (char)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_RANGE
    | TOKEN_IN
    | TOKEN_DOT
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_DEFAULT
    | TOKEN_DO
    | TOKEN_COLON
    | TOKEN_QUEST
    | TOKEN_FOR
    | TOKEN_ADDEQ
    | TOKEN_MINUSEQ
    | TOKEN_ADDSELF
    | TOKEN_MINUSSELF
    | TOKEN_STRING
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_CSTCHAR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VardecAndAssign
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_StmtC
    | NONTERM_StmtR
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstC
    | NONTERM_ConstS
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | RANGE  -> 25 
  | IN  -> 26 
  | DOT  -> 27 
  | SWITCH  -> 28 
  | CASE  -> 29 
  | DEFAULT  -> 30 
  | DO  -> 31 
  | COLON  -> 32 
  | QUEST  -> 33 
  | FOR  -> 34 
  | ADDEQ  -> 35 
  | MINUSEQ  -> 36 
  | ADDSELF  -> 37 
  | MINUSSELF  -> 38 
  | STRING  -> 39 
  | CHAR  -> 40 
  | ELSE  -> 41 
  | IF  -> 42 
  | INT  -> 43 
  | NULL  -> 44 
  | PRINT  -> 45 
  | PRINTLN  -> 46 
  | RETURN  -> 47 
  | VOID  -> 48 
  | WHILE  -> 49 
  | CSTCHAR _ -> 50 
  | CSTSTRING _ -> 51 
  | NAME _ -> 52 
  | CSTINT _ -> 53 
  | CSTBOOL _ -> 54 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_RANGE 
  | 26 -> TOKEN_IN 
  | 27 -> TOKEN_DOT 
  | 28 -> TOKEN_SWITCH 
  | 29 -> TOKEN_CASE 
  | 30 -> TOKEN_DEFAULT 
  | 31 -> TOKEN_DO 
  | 32 -> TOKEN_COLON 
  | 33 -> TOKEN_QUEST 
  | 34 -> TOKEN_FOR 
  | 35 -> TOKEN_ADDEQ 
  | 36 -> TOKEN_MINUSEQ 
  | 37 -> TOKEN_ADDSELF 
  | 38 -> TOKEN_MINUSSELF 
  | 39 -> TOKEN_STRING 
  | 40 -> TOKEN_CHAR 
  | 41 -> TOKEN_ELSE 
  | 42 -> TOKEN_IF 
  | 43 -> TOKEN_INT 
  | 44 -> TOKEN_NULL 
  | 45 -> TOKEN_PRINT 
  | 46 -> TOKEN_PRINTLN 
  | 47 -> TOKEN_RETURN 
  | 48 -> TOKEN_VOID 
  | 49 -> TOKEN_WHILE 
  | 50 -> TOKEN_CSTCHAR 
  | 51 -> TOKEN_CSTSTRING 
  | 52 -> TOKEN_NAME 
  | 53 -> TOKEN_CSTINT 
  | 54 -> TOKEN_CSTBOOL 
  | 57 -> TOKEN_end_of_input
  | 55 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_VardecAndAssign 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Block 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_Stmt 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_StmtU 
    | 42 -> NONTERM_StmtC 
    | 43 -> NONTERM_StmtC 
    | 44 -> NONTERM_StmtC 
    | 45 -> NONTERM_StmtC 
    | 46 -> NONTERM_StmtR 
    | 47 -> NONTERM_StmtR 
    | 48 -> NONTERM_StmtR 
    | 49 -> NONTERM_Expr 
    | 50 -> NONTERM_Expr 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_ExprNotAccess 
    | 74 -> NONTERM_ExprNotAccess 
    | 75 -> NONTERM_ExprNotAccess 
    | 76 -> NONTERM_ExprNotAccess 
    | 77 -> NONTERM_ExprNotAccess 
    | 78 -> NONTERM_AtExprNotAccess 
    | 79 -> NONTERM_AtExprNotAccess 
    | 80 -> NONTERM_AtExprNotAccess 
    | 81 -> NONTERM_AtExprNotAccess 
    | 82 -> NONTERM_AtExprNotAccess 
    | 83 -> NONTERM_Access 
    | 84 -> NONTERM_Access 
    | 85 -> NONTERM_Access 
    | 86 -> NONTERM_Access 
    | 87 -> NONTERM_Access 
    | 88 -> NONTERM_Exprs 
    | 89 -> NONTERM_Exprs 
    | 90 -> NONTERM_Exprs1 
    | 91 -> NONTERM_Exprs1 
    | 92 -> NONTERM_Const 
    | 93 -> NONTERM_Const 
    | 94 -> NONTERM_Const 
    | 95 -> NONTERM_Const 
    | 96 -> NONTERM_ConstC 
    | 97 -> NONTERM_ConstS 
    | 98 -> NONTERM_Type 
    | 99 -> NONTERM_Type 
    | 100 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 57 
let _fsyacc_tagOfErrorTerminal = 55

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | RANGE  -> "RANGE" 
  | IN  -> "IN" 
  | DOT  -> "DOT" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | DEFAULT  -> "DEFAULT" 
  | DO  -> "DO" 
  | COLON  -> "COLON" 
  | QUEST  -> "QUEST" 
  | FOR  -> "FOR" 
  | ADDEQ  -> "ADDEQ" 
  | MINUSEQ  -> "MINUSEQ" 
  | ADDSELF  -> "ADDSELF" 
  | MINUSSELF  -> "MINUSSELF" 
  | STRING  -> "STRING" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | RANGE  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | QUEST  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | ADDEQ  -> (null : System.Object) 
  | MINUSEQ  -> (null : System.Object) 
  | ADDSELF  -> (null : System.Object) 
  | MINUSSELF  -> (null : System.Object) 
  | STRING  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 29us; 38us; 33us; 38us; 39us; 38us; 41us; 46us; 44us; 46us; 47us; 46us; 50us; 46us; 4us; 65535us; 41us; 49us; 44us; 49us; 47us; 49us; 50us; 49us; 5us; 65535us; 9us; 13us; 10us; 12us; 11us; 13us; 18us; 19us; 20us; 21us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 29us; 30us; 33us; 34us; 3us; 65535us; 29us; 37us; 33us; 37us; 39us; 40us; 20us; 65535us; 31us; 32us; 35us; 36us; 41us; 61us; 44us; 61us; 47us; 61us; 50us; 61us; 68us; 61us; 69us; 61us; 71us; 61us; 72us; 61us; 80us; 61us; 81us; 61us; 97us; 61us; 98us; 61us; 100us; 61us; 101us; 61us; 125us; 61us; 126us; 61us; 143us; 61us; 146us; 61us; 4us; 65535us; 41us; 42us; 44us; 45us; 47us; 48us; 50us; 51us; 5us; 65535us; 41us; 44us; 44us; 44us; 47us; 44us; 50us; 44us; 69us; 129us; 18us; 65535us; 41us; 52us; 44us; 52us; 47us; 52us; 50us; 52us; 68us; 70us; 69us; 53us; 71us; 73us; 72us; 73us; 80us; 82us; 81us; 82us; 97us; 99us; 98us; 99us; 100us; 102us; 101us; 102us; 125us; 127us; 126us; 127us; 143us; 144us; 146us; 147us; 10us; 65535us; 41us; 54us; 44us; 54us; 47us; 54us; 50us; 54us; 69us; 54us; 72us; 128us; 81us; 130us; 98us; 131us; 101us; 132us; 126us; 138us; 3us; 65535us; 112us; 113us; 144us; 148us; 147us; 149us; 2us; 65535us; 121us; 123us; 122us; 124us; 60us; 65535us; 14us; 15us; 41us; 55us; 44us; 55us; 47us; 55us; 50us; 55us; 57us; 59us; 64us; 67us; 65us; 66us; 68us; 55us; 69us; 55us; 71us; 55us; 72us; 55us; 76us; 79us; 77us; 78us; 80us; 55us; 81us; 55us; 85us; 87us; 86us; 88us; 89us; 92us; 90us; 91us; 93us; 96us; 94us; 95us; 97us; 55us; 98us; 55us; 100us; 55us; 101us; 55us; 104us; 105us; 109us; 110us; 125us; 55us; 126us; 55us; 134us; 135us; 143us; 55us; 146us; 55us; 160us; 161us; 163us; 195us; 166us; 167us; 168us; 169us; 170us; 192us; 172us; 173us; 196us; 176us; 197us; 177us; 198us; 178us; 199us; 179us; 200us; 180us; 201us; 181us; 202us; 182us; 209us; 183us; 210us; 184us; 211us; 185us; 212us; 186us; 213us; 187us; 214us; 188us; 215us; 189us; 216us; 190us; 217us; 191us; 218us; 193us; 222us; 192us; 223us; 192us; 234us; 194us; 237us; 195us; 60us; 65535us; 14us; 157us; 41us; 157us; 44us; 157us; 47us; 157us; 50us; 157us; 57us; 157us; 64us; 157us; 65us; 157us; 68us; 157us; 69us; 157us; 71us; 157us; 72us; 157us; 76us; 157us; 77us; 157us; 80us; 157us; 81us; 157us; 85us; 157us; 86us; 157us; 89us; 157us; 90us; 157us; 93us; 157us; 94us; 157us; 97us; 157us; 98us; 157us; 100us; 157us; 101us; 157us; 104us; 157us; 109us; 157us; 125us; 157us; 126us; 157us; 134us; 157us; 143us; 157us; 146us; 157us; 160us; 157us; 163us; 157us; 166us; 157us; 168us; 157us; 170us; 158us; 172us; 157us; 196us; 157us; 197us; 157us; 198us; 157us; 199us; 157us; 200us; 157us; 201us; 157us; 202us; 157us; 209us; 157us; 210us; 157us; 211us; 157us; 212us; 157us; 213us; 157us; 214us; 157us; 215us; 157us; 216us; 157us; 217us; 157us; 218us; 157us; 222us; 158us; 223us; 158us; 234us; 157us; 237us; 157us; 62us; 65535us; 14us; 159us; 41us; 159us; 44us; 159us; 47us; 159us; 50us; 159us; 57us; 159us; 64us; 159us; 65us; 159us; 68us; 159us; 69us; 159us; 71us; 159us; 72us; 159us; 76us; 159us; 77us; 159us; 80us; 159us; 81us; 159us; 85us; 159us; 86us; 159us; 89us; 159us; 90us; 159us; 93us; 159us; 94us; 159us; 97us; 159us; 98us; 159us; 100us; 159us; 101us; 159us; 104us; 159us; 109us; 159us; 125us; 159us; 126us; 159us; 134us; 159us; 140us; 141us; 143us; 159us; 146us; 159us; 160us; 159us; 163us; 159us; 166us; 159us; 168us; 159us; 170us; 159us; 172us; 159us; 196us; 159us; 197us; 159us; 198us; 159us; 199us; 159us; 200us; 159us; 201us; 159us; 202us; 159us; 209us; 159us; 210us; 159us; 211us; 159us; 212us; 159us; 213us; 159us; 214us; 159us; 215us; 159us; 216us; 159us; 217us; 159us; 218us; 159us; 222us; 159us; 223us; 159us; 231us; 233us; 234us; 159us; 237us; 159us; 67us; 65535us; 14us; 156us; 41us; 156us; 44us; 156us; 47us; 156us; 50us; 156us; 57us; 156us; 64us; 156us; 65us; 156us; 68us; 156us; 69us; 156us; 71us; 156us; 72us; 156us; 76us; 156us; 77us; 156us; 80us; 156us; 81us; 156us; 83us; 116us; 84us; 115us; 85us; 155us; 86us; 155us; 89us; 156us; 90us; 156us; 93us; 156us; 94us; 156us; 97us; 156us; 98us; 156us; 100us; 156us; 101us; 156us; 104us; 156us; 109us; 156us; 125us; 156us; 126us; 156us; 134us; 156us; 143us; 156us; 146us; 156us; 160us; 156us; 163us; 156us; 166us; 156us; 168us; 156us; 170us; 155us; 172us; 156us; 196us; 156us; 197us; 156us; 198us; 156us; 199us; 156us; 200us; 156us; 201us; 156us; 202us; 156us; 205us; 206us; 207us; 208us; 209us; 156us; 210us; 156us; 211us; 156us; 212us; 156us; 213us; 156us; 214us; 156us; 215us; 156us; 216us; 156us; 217us; 156us; 218us; 156us; 222us; 156us; 223us; 155us; 225us; 226us; 228us; 229us; 231us; 232us; 234us; 156us; 237us; 156us; 1us; 65535us; 163us; 164us; 2us; 65535us; 163us; 236us; 237us; 238us; 62us; 65535us; 14us; 219us; 41us; 219us; 44us; 219us; 47us; 219us; 50us; 219us; 57us; 219us; 64us; 219us; 65us; 219us; 68us; 219us; 69us; 219us; 71us; 219us; 72us; 219us; 76us; 219us; 77us; 219us; 80us; 219us; 81us; 219us; 85us; 219us; 86us; 219us; 89us; 219us; 90us; 219us; 93us; 219us; 94us; 219us; 97us; 219us; 98us; 219us; 100us; 219us; 101us; 219us; 104us; 219us; 109us; 219us; 125us; 219us; 126us; 219us; 134us; 219us; 140us; 219us; 143us; 219us; 146us; 219us; 160us; 219us; 163us; 219us; 166us; 219us; 168us; 219us; 170us; 219us; 172us; 219us; 196us; 219us; 197us; 219us; 198us; 219us; 199us; 219us; 200us; 219us; 201us; 219us; 202us; 219us; 209us; 219us; 210us; 219us; 211us; 219us; 212us; 219us; 213us; 219us; 214us; 219us; 215us; 219us; 216us; 219us; 217us; 219us; 218us; 219us; 222us; 219us; 223us; 219us; 231us; 219us; 234us; 219us; 237us; 219us; 62us; 65535us; 14us; 220us; 41us; 220us; 44us; 220us; 47us; 220us; 50us; 220us; 57us; 220us; 64us; 220us; 65us; 220us; 68us; 220us; 69us; 220us; 71us; 220us; 72us; 220us; 76us; 220us; 77us; 220us; 80us; 220us; 81us; 220us; 85us; 220us; 86us; 220us; 89us; 220us; 90us; 220us; 93us; 220us; 94us; 220us; 97us; 220us; 98us; 220us; 100us; 220us; 101us; 220us; 104us; 220us; 109us; 220us; 125us; 220us; 126us; 220us; 134us; 220us; 140us; 220us; 143us; 220us; 146us; 220us; 160us; 220us; 163us; 220us; 166us; 220us; 168us; 220us; 170us; 220us; 172us; 220us; 196us; 220us; 197us; 220us; 198us; 220us; 199us; 220us; 200us; 220us; 201us; 220us; 202us; 220us; 209us; 220us; 210us; 220us; 211us; 220us; 212us; 220us; 213us; 220us; 214us; 220us; 215us; 220us; 216us; 220us; 217us; 220us; 218us; 220us; 222us; 220us; 223us; 220us; 231us; 220us; 234us; 220us; 237us; 220us; 62us; 65535us; 14us; 221us; 41us; 221us; 44us; 221us; 47us; 221us; 50us; 221us; 57us; 221us; 64us; 221us; 65us; 221us; 68us; 221us; 69us; 221us; 71us; 221us; 72us; 221us; 76us; 221us; 77us; 221us; 80us; 221us; 81us; 221us; 85us; 221us; 86us; 221us; 89us; 221us; 90us; 221us; 93us; 221us; 94us; 221us; 97us; 221us; 98us; 221us; 100us; 221us; 101us; 221us; 104us; 221us; 109us; 221us; 125us; 221us; 126us; 221us; 134us; 221us; 140us; 221us; 143us; 221us; 146us; 221us; 160us; 221us; 163us; 221us; 166us; 221us; 168us; 221us; 170us; 221us; 172us; 221us; 196us; 221us; 197us; 221us; 198us; 221us; 199us; 221us; 200us; 221us; 201us; 221us; 202us; 221us; 209us; 221us; 210us; 221us; 211us; 221us; 212us; 221us; 213us; 221us; 214us; 221us; 215us; 221us; 216us; 221us; 217us; 221us; 218us; 221us; 222us; 221us; 223us; 221us; 231us; 221us; 234us; 221us; 237us; 221us; 9us; 65535us; 0us; 11us; 4us; 11us; 29us; 9us; 33us; 9us; 39us; 9us; 41us; 10us; 44us; 10us; 47us; 10us; 50us; 10us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 24us; 30us; 33us; 36us; 40us; 61us; 66us; 72us; 91us; 102us; 106us; 109us; 170us; 231us; 294us; 362us; 364us; 367us; 430us; 493us; 556us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 7us; 2us; 6us; 14us; 4us; 6us; 7us; 11us; 12us; 3us; 6us; 11us; 12us; 1us; 7us; 15us; 7us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 1us; 8us; 2us; 8us; 14us; 1us; 9us; 3us; 9us; 11us; 12us; 1us; 10us; 3us; 10us; 11us; 12us; 1us; 10us; 2us; 11us; 12us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 16us; 2us; 17us; 18us; 1us; 18us; 1us; 18us; 1us; 19us; 1us; 19us; 1us; 19us; 1us; 21us; 1us; 21us; 1us; 22us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 3us; 24us; 30us; 36us; 1us; 25us; 15us; 26us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 1us; 26us; 2us; 27us; 28us; 1us; 27us; 15us; 28us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 1us; 28us; 1us; 29us; 1us; 30us; 3us; 30us; 36us; 37us; 1us; 30us; 3us; 30us; 36us; 37us; 17us; 30us; 36us; 37us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 30us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 1us; 30us; 3us; 30us; 36us; 37us; 1us; 30us; 1us; 30us; 2us; 30us; 36us; 1us; 30us; 1us; 31us; 2us; 31us; 38us; 1us; 31us; 2us; 31us; 38us; 16us; 31us; 38us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 31us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 1us; 31us; 2us; 31us; 38us; 1us; 31us; 2us; 32us; 35us; 4us; 32us; 35us; 39us; 41us; 3us; 32us; 39us; 84us; 2us; 32us; 84us; 16us; 32us; 39us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 32us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 1us; 32us; 2us; 32us; 39us; 16us; 32us; 39us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 32us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 1us; 32us; 2us; 32us; 39us; 16us; 32us; 39us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 32us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 1us; 32us; 2us; 32us; 39us; 1us; 32us; 1us; 33us; 2us; 33us; 40us; 1us; 33us; 1us; 33us; 1us; 33us; 15us; 33us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 15us; 34us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 3us; 35us; 41us; 87us; 2us; 35us; 87us; 1us; 35us; 2us; 35us; 41us; 1us; 35us; 2us; 35us; 41us; 1us; 35us; 2us; 35us; 41us; 1us; 35us; 2us; 35us; 41us; 1us; 35us; 2us; 35us; 41us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 1us; 40us; 1us; 40us; 15us; 40us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 1us; 40us; 1us; 40us; 1us; 41us; 2us; 42us; 44us; 2us; 42us; 44us; 2us; 42us; 44us; 2us; 42us; 44us; 2us; 42us; 44us; 2us; 42us; 44us; 2us; 43us; 45us; 2us; 43us; 45us; 2us; 43us; 45us; 1us; 44us; 1us; 45us; 3us; 46us; 47us; 48us; 2us; 47us; 48us; 2us; 47us; 48us; 1us; 48us; 1us; 48us; 8us; 49us; 52us; 65us; 66us; 69us; 70us; 84us; 87us; 7us; 49us; 52us; 65us; 66us; 69us; 70us; 87us; 1us; 50us; 2us; 50us; 81us; 1us; 51us; 1us; 52us; 15us; 52us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 2us; 53us; 83us; 1us; 53us; 1us; 53us; 1us; 53us; 1us; 54us; 15us; 54us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 2us; 55us; 56us; 15us; 55us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 3us; 56us; 81us; 84us; 2us; 56us; 97us; 1us; 56us; 15us; 56us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 1us; 56us; 1us; 57us; 15us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 69us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 76us; 77us; 14us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 77us; 15us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 87us; 16us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 90us; 91us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 2us; 67us; 87us; 1us; 68us; 2us; 68us; 87us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 81us; 2us; 81us; 84us; 1us; 81us; 1us; 82us; 2us; 82us; 87us; 1us; 83us; 1us; 84us; 2us; 84us; 87us; 1us; 84us; 2us; 85us; 86us; 2us; 85us; 87us; 1us; 86us; 1us; 87us; 1us; 87us; 1us; 89us; 1us; 91us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 99us; 1us; 100us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 26us; 31us; 35us; 37us; 53us; 55us; 58us; 60us; 64us; 66us; 70us; 72us; 75us; 77us; 79us; 81us; 83us; 85us; 87us; 89us; 91us; 93us; 95us; 97us; 99us; 101us; 103us; 106us; 108us; 110us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 130us; 132us; 134us; 138us; 140us; 156us; 158us; 161us; 163us; 179us; 181us; 183us; 185us; 189us; 191us; 195us; 213us; 229us; 231us; 235us; 237us; 239us; 242us; 244us; 246us; 249us; 251us; 254us; 271us; 287us; 289us; 292us; 294us; 297us; 302us; 306us; 309us; 326us; 342us; 344us; 347us; 364us; 380us; 382us; 385us; 402us; 418us; 420us; 423us; 425us; 427us; 430us; 432us; 434us; 436us; 452us; 454us; 456us; 458us; 460us; 476us; 478us; 480us; 482us; 484us; 488us; 491us; 493us; 496us; 498us; 501us; 503us; 506us; 508us; 511us; 513us; 516us; 518us; 520us; 522us; 524us; 526us; 528us; 530us; 532us; 548us; 550us; 552us; 554us; 557us; 560us; 563us; 566us; 569us; 572us; 575us; 578us; 581us; 583us; 585us; 589us; 592us; 595us; 597us; 599us; 608us; 616us; 618us; 621us; 623us; 625us; 641us; 644us; 646us; 648us; 650us; 652us; 668us; 671us; 687us; 691us; 694us; 696us; 712us; 714us; 716us; 732us; 748us; 764us; 780us; 796us; 812us; 828us; 844us; 860us; 876us; 892us; 908us; 924us; 940us; 956us; 972us; 987us; 1003us; 1019us; 1036us; 1038us; 1040us; 1042us; 1044us; 1046us; 1048us; 1050us; 1052us; 1054us; 1056us; 1059us; 1061us; 1064us; 1066us; 1068us; 1070us; 1072us; 1074us; 1076us; 1078us; 1080us; 1082us; 1084us; 1086us; 1088us; 1090us; 1092us; 1095us; 1097us; 1099us; 1102us; 1104us; 1106us; 1109us; 1111us; 1114us; 1117us; 1119us; 1121us; 1123us; 1125us; 1127us; 1129us; 1131us; 1133us; 1135us; 1137us; 1139us; 1141us; 1143us; 1145us; 1147us; |]
let _fsyacc_action_rows = 249
let _fsyacc_actionTableElements = [|4us; 16386us; 39us; 248us; 40us; 247us; 43us; 246us; 48us; 27us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 4us; 16386us; 39us; 248us; 40us; 247us; 43us; 246us; 48us; 27us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 20us; 22us; 18us; 52us; 16us; 3us; 32768us; 1us; 20us; 22us; 18us; 52us; 16us; 3us; 32768us; 1us; 20us; 22us; 18us; 52us; 17us; 2us; 16390us; 5us; 23us; 9us; 14us; 1us; 16390us; 5us; 23us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 14us; 16391us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 0us; 16392us; 1us; 16392us; 1us; 33us; 3us; 32768us; 1us; 20us; 22us; 18us; 52us; 16us; 1us; 16393us; 5us; 23us; 3us; 32768us; 1us; 20us; 22us; 18us; 52us; 16us; 2us; 32768us; 2us; 22us; 5us; 23us; 0us; 16394us; 2us; 32768us; 6us; 24us; 53us; 25us; 0us; 16395us; 1us; 32768us; 6us; 26us; 0us; 16396us; 1us; 32768us; 52us; 28us; 1us; 32768us; 1us; 29us; 3us; 16399us; 39us; 248us; 40us; 247us; 43us; 246us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 41us; 0us; 16397us; 3us; 16399us; 39us; 248us; 40us; 247us; 43us; 246us; 1us; 32768us; 2us; 35us; 1us; 32768us; 3us; 41us; 0us; 16398us; 0us; 16400us; 1us; 16401us; 8us; 39us; 3us; 32768us; 39us; 248us; 40us; 247us; 43us; 246us; 0us; 16402us; 25us; 16404us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 101us; 34us; 84us; 37us; 205us; 38us; 207us; 39us; 248us; 40us; 247us; 42us; 63us; 43us; 246us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 75us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 1us; 32768us; 4us; 43us; 0us; 16403us; 25us; 16404us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 101us; 34us; 84us; 37us; 205us; 38us; 207us; 39us; 248us; 40us; 247us; 42us; 63us; 43us; 246us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 75us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16405us; 1us; 32768us; 7us; 47us; 25us; 16404us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 101us; 34us; 84us; 37us; 205us; 38us; 207us; 39us; 248us; 40us; 247us; 42us; 63us; 43us; 246us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 75us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16406us; 1us; 32768us; 7us; 50us; 25us; 16404us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 101us; 34us; 84us; 37us; 205us; 38us; 207us; 39us; 248us; 40us; 247us; 42us; 63us; 43us; 246us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 75us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16407us; 0us; 16408us; 1us; 16408us; 41us; 72us; 0us; 16409us; 15us; 32768us; 7us; 56us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 0us; 16410us; 16us; 32768us; 1us; 223us; 7us; 58us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16411us; 15us; 32768us; 7us; 60us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 0us; 16412us; 0us; 16413us; 1us; 32768us; 1us; 64us; 1us; 32768us; 1us; 65us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 2us; 69us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 15us; 32768us; 2us; 68us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 100us; 34us; 83us; 37us; 205us; 38us; 207us; 42us; 62us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 74us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 101us; 34us; 84us; 37us; 205us; 38us; 207us; 42us; 63us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 75us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 1us; 32768us; 41us; 71us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 100us; 34us; 83us; 37us; 205us; 38us; 207us; 42us; 62us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 74us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 101us; 34us; 84us; 37us; 205us; 38us; 207us; 42us; 63us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 75us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16414us; 1us; 32768us; 1us; 76us; 1us; 32768us; 1us; 77us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 2us; 81us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 15us; 32768us; 2us; 80us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 100us; 34us; 83us; 37us; 205us; 38us; 207us; 42us; 62us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 74us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 101us; 34us; 84us; 37us; 205us; 38us; 207us; 42us; 63us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 75us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16415us; 3us; 32768us; 1us; 86us; 22us; 231us; 52us; 227us; 3us; 32768us; 1us; 85us; 22us; 231us; 52us; 227us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 7us; 90us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 15us; 32768us; 7us; 89us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 7us; 94us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 15us; 32768us; 7us; 93us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 2us; 98us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 15us; 32768us; 2us; 97us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 100us; 34us; 83us; 37us; 205us; 38us; 207us; 42us; 62us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 74us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 101us; 34us; 84us; 37us; 205us; 38us; 207us; 42us; 63us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 75us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16416us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 100us; 34us; 83us; 37us; 205us; 38us; 207us; 42us; 62us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 74us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 101us; 34us; 84us; 37us; 205us; 38us; 207us; 42us; 63us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 75us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 1us; 32768us; 49us; 103us; 1us; 32768us; 1us; 104us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 2us; 106us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 1us; 32768us; 7us; 107us; 0us; 16417us; 1us; 32768us; 1us; 109us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 2us; 111us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 1us; 32768us; 3us; 112us; 2us; 32768us; 29us; 139us; 30us; 145us; 1us; 32768us; 4us; 114us; 0us; 16418us; 2us; 32768us; 5us; 234us; 26us; 118us; 2us; 32768us; 5us; 234us; 26us; 117us; 1us; 32768us; 25us; 119us; 1us; 32768us; 25us; 120us; 1us; 32768us; 1us; 121us; 1us; 32768us; 1us; 122us; 1us; 32768us; 53us; 150us; 1us; 32768us; 53us; 150us; 1us; 32768us; 2us; 125us; 1us; 32768us; 2us; 126us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 100us; 34us; 83us; 37us; 205us; 38us; 207us; 42us; 62us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 74us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 101us; 34us; 84us; 37us; 205us; 38us; 207us; 42us; 63us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 75us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 1us; 32768us; 49us; 133us; 1us; 32768us; 1us; 134us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 2us; 136us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 1us; 32768us; 7us; 137us; 0us; 16424us; 0us; 16425us; 1us; 32768us; 1us; 140us; 8us; 32768us; 1us; 222us; 10us; 225us; 21us; 241us; 44us; 243us; 50us; 244us; 51us; 245us; 53us; 239us; 54us; 240us; 1us; 32768us; 2us; 142us; 1us; 32768us; 32us; 143us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 100us; 34us; 83us; 37us; 205us; 38us; 207us; 42us; 62us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 74us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 2us; 16426us; 29us; 139us; 30us; 145us; 1us; 32768us; 32us; 146us; 22us; 32768us; 1us; 223us; 3us; 41us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 28us; 108us; 31us; 100us; 34us; 83us; 37us; 205us; 38us; 207us; 42us; 62us; 44us; 243us; 45us; 168us; 46us; 175us; 47us; 57us; 49us; 74us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 2us; 16427us; 29us; 139us; 30us; 145us; 0us; 16428us; 0us; 16429us; 1us; 16430us; 8us; 151us; 1us; 32768us; 53us; 152us; 1us; 16431us; 8us; 153us; 1us; 32768us; 53us; 154us; 0us; 16432us; 7us; 16433us; 2us; 230us; 5us; 234us; 9us; 160us; 35us; 209us; 36us; 210us; 37us; 203us; 38us; 204us; 6us; 16433us; 5us; 234us; 9us; 160us; 35us; 209us; 36us; 210us; 37us; 203us; 38us; 204us; 0us; 16434us; 1us; 16434us; 2us; 224us; 0us; 16435us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 14us; 16436us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 1us; 16467us; 1us; 163us; 15us; 16472us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 1us; 32768us; 2us; 165us; 0us; 16437us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16438us; 15us; 32768us; 1us; 170us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 14us; 16439us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 171us; 52us; 162us; 53us; 239us; 54us; 240us; 1us; 16481us; 8us; 172us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 2us; 174us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 0us; 16440us; 0us; 16441us; 3us; 16442us; 22us; 198us; 23us; 199us; 24us; 200us; 3us; 16443us; 22us; 198us; 23us; 199us; 24us; 200us; 0us; 16444us; 0us; 16445us; 0us; 16446us; 9us; 16447us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 9us; 16448us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 0us; 16453us; 0us; 16454us; 15us; 32768us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 32us; 212us; 33us; 211us; 14us; 16455us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 9us; 16456us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 9us; 16457us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 9us; 16458us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 9us; 16459us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 11us; 16460us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 14us; 32768us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 12us; 16461us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 15us; 32768us; 6us; 235us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 15us; 16474us; 8us; 237us; 12us; 218us; 13us; 217us; 14us; 201us; 15us; 202us; 16us; 213us; 17us; 214us; 18us; 215us; 19us; 216us; 20us; 196us; 21us; 197us; 22us; 198us; 23us; 199us; 24us; 200us; 33us; 211us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16449us; 0us; 16450us; 3us; 32768us; 1us; 228us; 22us; 231us; 52us; 227us; 1us; 16451us; 5us; 234us; 3us; 32768us; 1us; 228us; 22us; 231us; 52us; 227us; 1us; 16452us; 5us; 234us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16462us; 0us; 16463us; 0us; 16464us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16465us; 3us; 32768us; 1us; 228us; 22us; 231us; 52us; 227us; 1us; 16466us; 5us; 234us; 0us; 16467us; 3us; 32768us; 1us; 228us; 22us; 231us; 52us; 227us; 2us; 32768us; 2us; 230us; 5us; 234us; 0us; 16468us; 10us; 32768us; 1us; 223us; 10us; 225us; 21us; 241us; 22us; 231us; 44us; 243us; 50us; 244us; 51us; 245us; 52us; 227us; 53us; 239us; 54us; 240us; 1us; 16469us; 5us; 234us; 0us; 16470us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16471us; 0us; 16473us; 15us; 32768us; 1us; 223us; 10us; 225us; 11us; 166us; 21us; 241us; 22us; 231us; 37us; 205us; 38us; 207us; 44us; 243us; 45us; 168us; 46us; 175us; 50us; 244us; 51us; 245us; 52us; 162us; 53us; 239us; 54us; 240us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 1us; 32768us; 53us; 242us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 0us; 16482us; 0us; 16483us; 0us; 16484us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 8us; 9us; 14us; 15us; 17us; 18us; 19us; 23us; 27us; 31us; 34us; 36us; 52us; 67us; 68us; 70us; 74us; 76us; 80us; 83us; 84us; 87us; 88us; 90us; 91us; 93us; 95us; 99us; 101us; 103us; 104us; 108us; 110us; 112us; 113us; 114us; 116us; 120us; 121us; 147us; 149us; 150us; 176us; 177us; 179us; 205us; 206us; 208us; 234us; 235us; 236us; 238us; 239us; 255us; 256us; 273us; 274us; 290us; 291us; 292us; 294us; 296us; 312us; 328us; 344us; 360us; 383us; 406us; 408us; 431us; 454us; 455us; 457us; 459us; 475us; 491us; 507us; 523us; 546us; 569us; 570us; 574us; 578us; 594us; 610us; 626us; 642us; 658us; 674us; 690us; 706us; 722us; 738us; 754us; 770us; 793us; 816us; 817us; 840us; 863us; 865us; 867us; 883us; 899us; 901us; 902us; 904us; 920us; 936us; 938us; 941us; 943us; 944us; 947us; 950us; 952us; 954us; 956us; 958us; 960us; 962us; 964us; 966us; 989us; 1012us; 1013us; 1014us; 1015us; 1016us; 1017us; 1019us; 1021us; 1037us; 1053us; 1055us; 1056us; 1057us; 1059us; 1068us; 1070us; 1072us; 1095us; 1098us; 1100us; 1123us; 1126us; 1127us; 1128us; 1130us; 1132us; 1134us; 1136us; 1137us; 1145us; 1152us; 1153us; 1155us; 1156us; 1172us; 1187us; 1189us; 1205us; 1207us; 1208us; 1224us; 1225us; 1241us; 1256us; 1272us; 1274us; 1290us; 1306us; 1307us; 1308us; 1312us; 1316us; 1317us; 1318us; 1319us; 1329us; 1339us; 1340us; 1341us; 1357us; 1372us; 1382us; 1392us; 1402us; 1412us; 1424us; 1439us; 1452us; 1468us; 1484us; 1500us; 1516us; 1532us; 1548us; 1564us; 1580us; 1596us; 1597us; 1598us; 1602us; 1604us; 1608us; 1610us; 1626us; 1642us; 1658us; 1674us; 1690us; 1706us; 1722us; 1738us; 1754us; 1770us; 1771us; 1772us; 1773us; 1789us; 1805us; 1806us; 1810us; 1812us; 1813us; 1817us; 1820us; 1821us; 1832us; 1834us; 1835us; 1851us; 1852us; 1853us; 1869us; 1870us; 1871us; 1872us; 1874us; 1875us; 1876us; 1877us; 1878us; 1879us; 1880us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 9us; 7us; 7us; 8us; 7us; 5us; 5us; 9us; 7us; 8us; 6us; 3us; 7us; 4us; 1us; 3us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 6us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 3us; 3us; 5us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 14us; 14us; 14us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 19us; 19us; 19us; 20us; 20us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 25us; 26us; 26us; 26us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 65535us; 65535us; 16394us; 65535us; 16395us; 65535us; 16396us; 65535us; 65535us; 65535us; 65535us; 65535us; 16397us; 65535us; 65535us; 65535us; 16398us; 16400us; 65535us; 65535us; 16402us; 65535us; 65535us; 16403us; 65535us; 16405us; 65535us; 65535us; 16406us; 65535us; 65535us; 16407us; 16408us; 65535us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 16420us; 16421us; 16422us; 16423us; 65535us; 65535us; 65535us; 65535us; 65535us; 16424us; 16425us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16428us; 16429us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 16434us; 65535us; 16435us; 65535us; 65535us; 65535us; 65535us; 65535us; 16437us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16440us; 16441us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16449us; 16450us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16462us; 16463us; 16464us; 65535us; 65535us; 16465us; 65535us; 65535us; 16467us; 65535us; 65535us; 16468us; 65535us; 65535us; 16470us; 65535us; 16471us; 16473us; 65535us; 16475us; 16476us; 16477us; 65535us; 16478us; 16479us; 16480us; 16481us; 16482us; 16483us; 16484us; |]
let _fsyacc_reductions ()  =    [| 
# 533 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 542 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               Prog _1 
                   )
# 63 "CPar.fsy"
                 : Absyn.program));
# 553 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "CPar.fsy"
                                                               [] 
                   )
# 68 "CPar.fsy"
                 : 'gentype_Topdecs));
# 563 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 69 "CPar.fsy"
                 : 'gentype_Topdecs));
# 575 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 73 "CPar.fsy"
                 : 'gentype_Topdec));
# 586 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "CPar.fsy"
                                                               _1 
                   )
# 74 "CPar.fsy"
                 : 'gentype_Topdec));
# 597 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 92 "CPar.fsy"
                 : 'gentype_Vardec));
# 609 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                               ((fst _2) _1, snd _2 , _4) 
                   )
# 101 "CPar.fsy"
                 : 'gentype_VardecAndAssign));
# 622 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 106 "CPar.fsy"
                 : 'gentype_Vardesc));
# 633 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 111 "CPar.fsy"
                 : 'gentype_Vardesc));
# 644 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               _2                                      
                   )
# 113 "CPar.fsy"
                 : 'gentype_Vardesc));
# 655 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 115 "CPar.fsy"
                 : 'gentype_Vardesc));
# 666 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 117 "CPar.fsy"
                 : 'gentype_Vardesc));
# 678 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 122 "CPar.fsy"
                 : 'gentype_Fundec));
# 691 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 124 "CPar.fsy"
                 : 'gentype_Fundec));
# 705 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               [] 
                   )
# 129 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 715 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               _1 
                   )
# 130 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 726 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               [_1]     
                   )
# 134 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 737 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 135 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 749 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               Block _2 
                   )
# 140 "CPar.fsy"
                 : 'gentype_Block));
# 760 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               [] 
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 770 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 782 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 794 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               DecAndAssign (first _1, second _1, third _1) :: _3 
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 806 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               _1 
                   )
# 151 "CPar.fsy"
                 : 'gentype_Stmt));
# 817 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               _1 
                   )
# 152 "CPar.fsy"
                 : 'gentype_Stmt));
# 828 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 839 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               Return None          
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtM));
# 849 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtM));
# 860 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               _1                   
                   )
# 159 "CPar.fsy"
                 : 'gentype_StmtM));
# 871 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtM));
# 884 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 161 "CPar.fsy"
                 : 'gentype_StmtM));
# 896 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                                        For (_3, _5, _7, _9) 
                   )
# 163 "CPar.fsy"
                 : 'gentype_StmtM));
# 910 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               DoWhile (_2, _5) 
                   )
# 164 "CPar.fsy"
                 : 'gentype_StmtM));
# 922 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtC in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                                      Switch(_3,_6)  
                   )
# 165 "CPar.fsy"
                 : 'gentype_StmtM));
# 934 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtR in
            let _8 = parseState.GetInput(8) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                                     ForRange (_2, _6, _8)
                   )
# 166 "CPar.fsy"
                 : 'gentype_StmtM));
# 947 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 170 "CPar.fsy"
                 : 'gentype_StmtU));
# 960 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 171 "CPar.fsy"
                 : 'gentype_StmtU));
# 972 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 172 "CPar.fsy"
                 : 'gentype_StmtU));
# 984 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                                        For (_3, _5, _7, _9) 
                   )
# 173 "CPar.fsy"
                 : 'gentype_StmtU));
# 998 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtU in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               DoWhile (_2, _5) 
                   )
# 174 "CPar.fsy"
                 : 'gentype_StmtU));
# 1010 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtR in
            let _8 = parseState.GetInput(8) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                                     ForRange (_2, _6, _8)
                   )
# 175 "CPar.fsy"
                 : 'gentype_StmtU));
# 1023 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_AtExprNotAccess in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                                               [Case (_3, _6) ] 
                   )
# 180 "CPar.fsy"
                 : 'gentype_StmtC));
# 1035 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                                             [Default(_3)]    
                   )
# 181 "CPar.fsy"
                 : 'gentype_StmtC));
# 1046 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_AtExprNotAccess in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtC in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                                               Case (_3, _6) :: _7 
                   )
# 182 "CPar.fsy"
                 : 'gentype_StmtC));
# 1059 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtC in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                                             Default(_3) :: _4  
                   )
# 183 "CPar.fsy"
                 : 'gentype_StmtC));
# 1071 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                                     [_1] 
                   )
# 188 "CPar.fsy"
                 : 'gentype_StmtR));
# 1082 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                                     [_1;_3] 
                   )
# 189 "CPar.fsy"
                 : 'gentype_StmtR));
# 1094 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            let _3 = parseState.GetInput(3) :?> int in
            let _5 = parseState.GetInput(5) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                                       [_1;_3;_5] 
                   )
# 190 "CPar.fsy"
                 : 'gentype_StmtR));
# 1107 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Access _1           
                   )
# 194 "CPar.fsy"
                 : 'gentype_Expr));
# 1118 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               _1                  
                   )
# 195 "CPar.fsy"
                 : 'gentype_Expr));
# 1129 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               _1                  
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1140 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1152 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1164 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 202 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1175 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 203 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1186 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                                  Print(_3, _5)    
                   )
# 204 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1198 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 205 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1208 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 206 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1220 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 207 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1232 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 208 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1244 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 209 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1256 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 210 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1268 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 211 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1280 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 212 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1292 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               AssignEQ("A++", _1, CstI(1)) 
                   )
# 215 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1303 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               AssignEQ("A--", _1, CstI(1)) 
                   )
# 216 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1314 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               AssignEQ("++A", _2, CstI(1)) 
                   )
# 217 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1325 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               AssignEQ("--A", _2, CstI(1)) 
                   )
# 218 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1336 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               AssignEQ("+=A", _1, _3) 
                   )
# 220 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1348 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               AssignEQ("-=A", _1, _3) 
                   )
# 221 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1360 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               Prim3("?=", _1, _3, _5) 
                   )
# 224 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1373 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 226 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1385 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 227 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1397 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 228 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1409 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 229 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1421 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 230 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1433 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 231 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1445 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                               CstI _1             
                   )
# 239 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1456 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstC in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                               CstC (_1)           
                   )
# 240 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1467 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstS in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                               CstS (_1)           
                   )
# 241 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1478 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "CPar.fsy"
                                                               _2                  
                   )
# 242 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1489 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "CPar.fsy"
                                                               Addr _2             
                   )
# 243 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1500 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "CPar.fsy"
                                                               AccVar _1           
                   )
# 247 "CPar.fsy"
                 : 'gentype_Access));
# 1511 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "CPar.fsy"
                                                               _2                  
                   )
# 248 "CPar.fsy"
                 : 'gentype_Access));
# 1522 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 249 "CPar.fsy"
                 : 'gentype_Access));
# 1533 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 250 "CPar.fsy"
                 : 'gentype_Access));
# 1544 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 251 "CPar.fsy"
                 : 'gentype_Access));
# 1556 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "CPar.fsy"
                                                               []       
                   )
# 255 "CPar.fsy"
                 : 'gentype_Exprs));
# 1566 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "CPar.fsy"
                                                               _1       
                   )
# 256 "CPar.fsy"
                 : 'gentype_Exprs));
# 1577 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 "CPar.fsy"
                                                               [_1]     
                   )
# 260 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1588 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 261 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1600 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 "CPar.fsy"
                                                               _1       
                   )
# 265 "CPar.fsy"
                 : 'gentype_Const));
# 1611 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 "CPar.fsy"
                                                               _1       
                   )
# 266 "CPar.fsy"
                 : 'gentype_Const));
# 1622 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 "CPar.fsy"
                                                               - _2     
                   )
# 267 "CPar.fsy"
                 : 'gentype_Const));
# 1633 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 "CPar.fsy"
                                                               -1       
                   )
# 268 "CPar.fsy"
                 : 'gentype_Const));
# 1643 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 "CPar.fsy"
                                                               _1       
                   )
# 272 "CPar.fsy"
                 : 'gentype_ConstC));
# 1654 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 276 "CPar.fsy"
                                                               _1       
                   )
# 276 "CPar.fsy"
                 : 'gentype_ConstS));
# 1665 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 280 "CPar.fsy"
                                                               TypI     
                   )
# 280 "CPar.fsy"
                 : 'gentype_Type));
# 1675 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 "CPar.fsy"
                                                               TypC     
                   )
# 281 "CPar.fsy"
                 : 'gentype_Type));
# 1685 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 "CPar.fsy"
                                                               TypS     
                   )
# 282 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1696 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 58;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
